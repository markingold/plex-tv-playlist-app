<?php
// public/_env.php
function env_path(): string {
    return realpath(__DIR__ . '/..') . '/.env';
}

function env_read_all(): array {
    $p = env_path();
    $out = [];
    if (!is_file($p)) return $out;
    foreach (file($p, FILE_IGNORE_NEW_LINES) as $line) {
        $line = trim($line);
        if ($line === '' || $line[0] === '#') continue;
        $pos = strpos($line, '=');
        if ($pos === false) continue;
        $k = trim(substr($line, 0, $pos));
        $v = trim(substr($line, $pos+1));
        $out[$k] = $v;
    }
    return $out;
}

/**
 * Merge and write keys to .env. Returns true on success; throws on failure with a message.
 */
function env_write_updates(array $updates): bool {
    $p = env_path();
    $dir = dirname($p);

    if (!is_dir($dir) || !is_writable($dir)) {
        throw new RuntimeException("Directory not writable: $dir");
    }
    if (file_exists($p) && !is_writable($p)) {
        throw new RuntimeException(".env is not writable: $p");
    }

    $current = env_read_all();
    foreach ($updates as $k => $v) {
        if (is_bool($v)) $v = $v ? 'true' : 'false';
        $current[$k] = (string)$v;
    }

    $lines = ["# Autogenerated/updated by Plex Toolbox"];
    foreach ($current as $k => $v) {
        if (preg_match('/\s/', $v) && $v[0] !== '"' && $v[strlen($v)-1] !== '"') {
            $v = '"' . $v . '"';
        }
        $lines[] = $k . '=' . $v;
    }
    $data = implode("\n", $lines) . "\n";

    $tmp = $p . '.tmp';
    if (@file_put_contents($tmp, $data, LOCK_EX) === false) {
        throw new RuntimeException("Failed to write temp file: $tmp");
    }
    if (!@rename($tmp, $p)) {
        // Fallback copy+unlink for crossâ€‘fs rename issues
        if (!@copy($tmp, $p)) {
            @unlink($tmp);
            throw new RuntimeException("Failed to replace .env (rename/copy failed): $p");
        }
        @unlink($tmp);
    }

    @chmod($p, 0644);
    return true;
}
